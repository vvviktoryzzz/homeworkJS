О JAVASCRIPT
  История, перспективы и возможности:
    - https://learn.javascript.ru/intro

ОЗНАКОМЛЕНИЕ С ПРОГРАММОЙ КУРСА

ПОДКЛЮЧЕНИЕ JS
  По месту хранения кода:
    - Подключение кода непосредственно в html файле:
      <script>
        //js code here
      </script>
    - Подключение кода во внешнем файле:
      <script src="{{path}}"></script>

  Где подключать внешние скрипты:
    JS-библиотеки:
      - Всегда подключаем первыми в теге head

    Свои файлы с кодом:
      - Наглядная статья - https://flaviocopes.com/javascript-async-defer/#performance-comparison

      В теге head:
        Поведение по-умолчанию (без атрибутов):
          - Скрипты загружаются по порядку
          - Выполняются сразу после того, как загрузились
          - Парсинг html-документа приостанавливается на момент загрузки и выполнения скриптов
        С атрибутом async (применим только ко внешним скриптам):
          - Скрипты грузятся в произвольном порядке
          - Выполняются сразу после того, как загрузились
          - Парсинг html-документа приостанавливается только на момент выполнения скриптов
          - Хорош для независимых скриптов, например счётчиков и рекламы, относительный порядок выполнения которых не
            играет роли
        С атрибутом defer (применим только ко внешним скриптам):
          - Скрипты загружаются по порядку
          - Выполняются после загрузки всего html-документа
          - Парсинг html-документа не прерывается
          - Используется для скриптов, которым требуется доступ к построенному html-документу и/или если важен
            относительный порядок выполнения этих скриптов
      Перед закрывающим тегом body (атрибуты здесь уже не нужны):
        - Скрипты загружаются по порядку
        - Выполняются сразу после того, как загрузились
        - Парсинг html-документа осуществляется до начала загрузки и выполнения скриптов, соответственно не прерывается

      Плюсы и минусы основных подходов:
        Подключение скриптов в теге head с атрибутом defer:
          + Загрузка скрипта будет осуществляться параллельно с парсингом html-документа
          - Плохая поддержка некоторыми старыми версиями браузеров
        Подключение скриптов перед закрывающим тегом body:
          - Загрузка скрипта будет осуществляться после парсинга html-документа
          + Но эта задержка во времени не особо существенная
          + Хорошо поддерживается всеми браузерами

ПЕРЕМЕННЫЕ И ОПЕРАТОР TYPEOF
  Переменные и имена переменных:
    - http://web.archive.org/web/20190405104510/http://learn.javascript.ru/variables
    - http://web.archive.org/web/20190405104509/http://learn.javascript.ru/variable-names
  Типы данных и оператор typeof:
    - http://web.archive.org/web/20190405104509/http://learn.javascript.ru/types-intro
    - Отличие null от undefined - см. скрин

КОММЕНТИРОВАНИЕ КОДА, ВЫВОД И ЗАПРАШИВАНИЕ ДАННЫХ
  Комментарии в JS:
    - https://learn.javascript.ru/structure#%D0%BA%D0%BE%D0%BC%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B8
  Вывод и запрашивание данных:
    - https://learn.javascript.ru/uibasic
    - Команда prompt всегда возвращает строковое значение
    - var name = prompt('?'); - при нажатии на Cancel в переменную запишется 'null' как строка
    - console.log();
  DevTools - вкладка Console:
    - В ней можно не писать console.log()
    - Для перевода строки - Shift + Enter
    - Вернуть пред. код - стрелка "Вверх"

ДОМАШНЕЕ ЗАДАНИЕ 1
  Задание 1:
    Даны две переменных a и b. Как, без сложных манипуляций, можно поменять их значения местами?
    Придумать несколько решений - работать только с целыми числами, значения переменных не должны быть хардкодом.

    (!!!) Решение можно скинуть в текстовом файле. То, что не проходили на момент сдачи домашнего задания, в том числе и
    синтаксис ES6 использовать нельзя.