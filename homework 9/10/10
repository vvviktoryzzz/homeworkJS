ПРОТОТИПНЫЙ СТИЛЬ ООП
  Проверка класса через операцию instanceof:
    - http://web.archive.org/web/20190405104458/http://learn.javascript.ru/instanceof
    - Примитивы не являются instanceof своего класса

ПРЕДОПРЕДЕЛЕННЫЕ КЛАССЫ И ПОЛЕЗНЫЕ КОДЫ
  Предописанные классы и предсозданные объекты:
    - B.20
  Класс Object:
    - B.25
  Объект Math:
    - B.30
  Класс Number:
    - См. скрин
    - isNaN('') => false; isNaN('aaa') => true;
  Класс String:
    - B.40
    - Если в метод split() передать вторым параметром число - в результате получится массив указанной длины, например
      'Hello'.split('', 3) => ['H', 'e', 'l']
  Класс Array:
    - B.45
    - Некоторые методы массивов и строк пересекаются
    - Перебирающие методы массива - https://learn.javascript.ru/array-iteration
    - Перебирающий метод Find() - см. пример
    - Неиспользуемые параметры коллбэков можно не прописывать, имена параметров могут быть произвольными
    - Шаг перебирающих методов всегда +1, а также работу перебирающих методов невозможно остановить, поэтому если
      необходимо поведение, отличающееся от вышеописанного, лучше использовать обыкновенные циклы
  Доп. инфо:
    - Методы предописанных классов, как правило, можно вызывать цепочкой
    - Статический метод - это метод, применяемый к классу, а не к конкретному объекту класса, например Math.max(2, 5),
      Array.isArray([])

ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ *
  - B.55 - Предописанный класс Date
  - Статические и фабричные методы класса - https://learn.javascript.ru/static-properties-and-methods

ДОМАШНЕЕ ЗАДАНИЕ 9
  Задание 1:
    Переписать задачу с использованием перебирающего метода массивов:
      function filterNumbersArr(numbers) {
          var newArr = [];

          for (var i = 0; i < numbers.length; i++) {
              var el = numbers[i];

              if (el > 0) {
                  newArr[newArr.length] = el;
              }
          }

          return newArr;
      }

      filterNumbersArr([-1, 0, 2, 34, -2]);

  Задание 2:
    Написать функцию, принимающую массив чисел и возвращающую первое найденное положительное число.

  Задание 3:
    Написать функцию, которая будет определять, является ли переданное в нее слово палиндромом (напр. шалаш).
    Регистр в словах учитываться не должен. Тестировать функцию можно только на одиночных словах (без фраз).

    Функция должна работать следущим образом:
      isPalindrome('шалаШ'); // true
      isPalindrome('привет'); // false

  Задание 4:
    Написать функцию, которая будет определять, являются ли переданные в нее слова анаграммами (напр. кот и отк).
    Регистр в словах учитываться не должен.

    Функция должна работать следущим образом:
      areAnagrams('кот', 'Отк'); // true
      areAnagrams('кот', 'атк'); // false
      areAnagrams('кот', 'отко'); // false

  Задание 5:
    Написать функцию, которая будет разбивать массив на под-массивы определенной длины.

    Функция должна работать следующим образом:
      divideArr([1, 2, 3, 4], 2); // [[1, 2], [3, 4]]
      divideArr([1, 2, 3, 4, 5, 6, 7, 8], 3); // [[1, 2, 3], [4, 5, 6], [7, 8]]

  Задание 6 *:
    Написать функцию, определяющую, является ли переданное в нее число степенью двойки.