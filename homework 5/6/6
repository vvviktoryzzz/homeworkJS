ФУНКЦИИ
  Каррирование:
    - Это создание новой функции путём фиксирования аргументов существующей
    - См. скрин
    - http://prgssr.ru/development/vvedenie-v-karrirovanie-v-javascript.html#heading-section-1 - глава "Каррируем всё"

ОТЛАДКА КОДА
  - console.log, debugger (создать пример html + js)

  DevTools - вкладка Sources:
    - Точка остановки называется Breakpoint
    - Находясь на точке остановки можно выводить значение переменных или целых операций в консоль
    - F8 - используется для движения по брейкпоинтам
    - F10 - используется для построчного выполнения кода
    - Ctrl + O - используется для поиска нужного файла
    - Из красных ошибок в консоли всегда можно перейти к строке кода, в которой возникла ошибка

СОВЕТЫ ПО СТИЛЮ КОДА
  - http://web.archive.org/web/20190405104506/http://learn.javascript.ru/coding-style

ОБЩИЕ СОВЕТЫ
  - Разработка задачи - изначально стоит разбить задачу на под-задачи, далее можно писать "сложный" и некрасивый код,
    а уже после - его оптимизировать
  - Постоянно рефакторить свой код. Рефакторинг это - улучшение, оптимизация, сокращение и избавление от лишнего кода.
    Аргумент "оно же работает" не является залогом качества :)
  - Обязательно тестировать все возможные сценарии поломки вашего кода перед отправкой его ревьюеру
  - Сохранять себе скриншоты-памятки в классифицированную папку для быстрого, удобного и эффективного повторения
    при подготовке к собеседованиям
  - Практиковаться на данных сервисах - https://techrocks.ru/2021/11/24/resources-with-practical-tasks-for-web-developers/?utm_source=vk&utm_medium=social&utm_campaign=spisok-saytov-dlya-resheniya-zadach-po-veb-r

GIT
  - Что такое система контроля версий, Git, репозитории, коммиты, пушинг, пуллинг, ветки

  Последовательность действий:
    - Зарегистрировать аккаунт на https://github.com
    - Создать свой первый репозиторий (выбрать public и галочку Initialize this repository with a README)
    - Установить Git на компьютер
    - Открыть cmd / WS Terminal / GitBash

    Инструкция для первого пуша:
      - См. скрины (рассказать коротко о терминологии)
      - В команде push вместо ветки origin master пишем origin main

      Как перейти в свою локальную папку с проектом - команды для работы с любой консолью:
        d: - перейти на диск D
        dir (ls в MacOS) - показать вложенные директории

        cd .. - подняться на директорию вверх
        cd C:\Users\user\Downloads\Homeworks - перейти на указанный путь
        cd "My Folder" - перейти во внутреннюю директорию с названием My Folder
        cd + нажатие на tab - поиск внутренней директории
        cd + начало ввода имени директории + tab - автоматическая подсказка имени директории

        Клавиша "Вверх" - поиск ранее введенной команды

    Инструкция для последующих пушей:
      - См. скрин

    Что делать, если нужно "откатить коммит":
      - Внести изменения локально
      - Запушить новый коммит

  Доп. инфо:
    - Локальная папка .git должна храниться в корневой папке

    Файлы, позволяющие git игнорировать изменения:
      - .gitignore - создается в корневой папке (в т.ч. и на github), предназначен для установки правил всем участникам
        команды и для всего проекта
      - .git\info\exclude - уже существует в папке .git (хранится только локально), используется для того, чтобы
        спрятать от git те изменения или файлы, которые не нужно пушить - например, папку .idea или какие-либо
        вспомогательные файлы, которые не требуются всей остальной команде

ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ *
  Возможности и плюсы WebStorm:
    - См. памятку

ДОМАШНЕЕ ЗАДАНИЕ 5
  Задание 1:
    - Прочитать о Git (Основы и Ветвление в Git) - https://git-scm.com/book/ru/v1/Основы-Git
    - Как оформлять ДЗ в будущем:
      Для всех домашних заданий создать и использовать один репозиторий с названием JS_Homework, настроить в нем
      .gitignore файл
      Для каждого ДЗ - создавать новую папку с названием вида Lesson-3 и т.д.
      В каждой папке должны храниться файлы index.html и main.js, либо только main.js, если задание не требует верстки.
      Коммит-сообщение должно быть вида "Homework 3" и т.д.
      Каждый раз для проверки ДЗ - скидывать преподавателю ссылку на свой github - сразу на нужную папку с заданием.